"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5174],{9088:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"Readings/advanced-operations/12.2","title":"12.2 - Database Migrations","description":"Introduction to Database Migrations","source":"@site/docs/Readings/12-advanced-operations/12.2.md","sourceDirName":"Readings/12-advanced-operations","slug":"/Readings/advanced-operations/12.2","permalink":"/docs/Readings/advanced-operations/12.2","draft":false,"unlisted":false,"editUrl":"https://github.com/CS61D/website/tree/main/docs/Readings/12-advanced-operations/12.2.md","tags":[],"version":"current","frontMatter":{"title":"12.2 - Database Migrations","metadata":["Can be provided",{"as":"objects","or":"arrays"}]},"sidebar":"tutorialSidebar","previous":{"title":"12.1 - Advanced Database Operations","permalink":"/docs/Readings/advanced-operations/12.1"},"next":{"title":"Lecture 13 - tRPC on the Server","permalink":"/docs/Readings/trpc-on-the-server/"}}');var t=a(4848),i=a(8453);const r={title:"12.2 - Database Migrations",metadata:["Can be provided",{as:"objects",or:"arrays"}]},o=void 0,l={},d=[{value:"Introduction to Database Migrations",id:"introduction-to-database-migrations",level:2},{value:"Importance of Database Migrations",id:"importance-of-database-migrations",level:2},{value:"Example Migration Process",id:"example-migration-process",level:2},{value:"Tools for Database Migrations",id:"tools-for-database-migrations",level:2}];function c(e){const n={h2:"h2",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"introduction-to-database-migrations",children:"Introduction to Database Migrations"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Database migrations"})," are a way to incrementally apply changes to a database schema. They are used to evolve the database structure over time, ensuring that the schema is always in sync with the application code."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"importance-of-database-migrations",children:"Importance of Database Migrations"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Version Control for Database Schema"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Just like version control for code, migrations allow you to track changes to your database schema. This makes it easier to understand how the schema has evolved over time and to revert to previous versions if necessary."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Consistent Development Environment"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:'Migrations ensure that all developers are working with the same database schema, reducing the "it works on my machine" problem. This consistency helps avoid integration issues when merging code changes.'}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Automated Deployment"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Automated migrations can be integrated into deployment pipelines, ensuring that schema changes are applied seamlessly as part of the deployment process. This reduces the risk of human error and ensures that database changes are always applied correctly."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Data Integrity and Safety"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Migrations can be used to enforce data integrity rules and constraints, ensuring that data remains consistent and valid as the schema evolves. They also provide a safe way to make schema changes without risking data loss."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Ease of Maintenance"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Using migrations, database changes can be applied incrementally, making it easier to manage and maintain the database. Large, complex changes can be broken down into smaller, more manageable steps."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"example-migration-process",children:"Example Migration Process"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Create Migration Script"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"A migration script is created to define the changes to be made to the database schema. This could include creating tables, adding columns, modifying columns, or dropping tables."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Apply Migration"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"The migration script is applied to the database, updating the schema. This can be done manually or as part of an automated deployment process."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Verify Changes"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"After applying the migration, verify that the changes have been applied correctly and that the database is in the desired state."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Track Migration History"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Keep a record of all applied migrations to ensure that the database schema can be accurately recreated and to avoid applying the same migration multiple times."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"tools-for-database-migrations",children:"Tools for Database Migrations"}),"\n",(0,t.jsx)(n.p,{children:"There are various tools available to help manage database migrations. Some popular tools include:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Alembic"})," (for SQLAlchemy)"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Flyway"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Liquibase"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Rails Migrations"})," (for Ruby on Rails)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Django Migrations"})," (for Django)"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>o});var s=a(6540);const t={},i=s.createContext(t);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9876],{3013:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"Readings/basic-react/4.5","title":"4.5 - Passing Props","description":"---","source":"@site/docs/Readings/4-basic-react/4.5.md","sourceDirName":"Readings/4-basic-react","slug":"/Readings/basic-react/4.5","permalink":"/docs/Readings/basic-react/4.5","draft":false,"unlisted":false,"editUrl":"https://github.com/CS61D/website/tree/main/docs/Readings/4-basic-react/4.5.md","tags":[],"version":"current","frontMatter":{"title":"4.5 - Passing Props","metadata":["Can be provided",{"as":"objects","or":"arrays"}]},"sidebar":"tutorialSidebar","previous":{"title":"4.4 - Type Safe React","permalink":"/docs/Readings/basic-react/4.4"},"next":{"title":"4.6 - Rendering Lists","permalink":"/docs/Readings/basic-react/4.6"}}');var s=r(4848),a=r(8453),o=r(5537),i=r(9329);const c={title:"4.5 - Passing Props",metadata:["Can be provided",{as:"objects",or:"arrays"}]},l=void 0,d={},p=[{value:"What are props?",id:"what-are-props",level:3},{value:"Passing props to a component",id:"passing-props-to-a-component",level:3},{value:"Step 1: Pass props to the child component",id:"step-1-pass-props-to-the-child-component",level:4},{value:"Step 2: Read props inside the child component",id:"step-2-read-props-inside-the-child-component",level:4},{value:"Specifying a default value for a prop",id:"specifying-a-default-value-for-a-prop",level:4},{value:"Forwarding props with the JSX spread syntax",id:"forwarding-props-with-the-jsx-spread-syntax",level:4},{value:"How props change over time",id:"how-props-change-over-time",level:4}];function u(e){const n={admonition:"admonition",code:"code",h3:"h3",h4:"h4",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"what-are-props",children:"What are props?"}),"\n",(0,s.jsxs)(n.p,{children:["React components use ",(0,s.jsx)(n.strong,{children:"props"})," to communicate with each other."]}),"\n",(0,s.jsxs)(n.p,{children:["Props are the information that you pass to a JSX tag, and can be any JavaScript value like object, arrays, or functions. For example, ",(0,s.jsx)(n.code,{children:"className"}),", ",(0,s.jsx)(n.code,{children:"src"}),", ",(0,s.jsx)(n.code,{children:"alt"}),", ",(0,s.jsx)(n.code,{children:"width"}),", and ",(0,s.jsx)(n.code,{children:"height"})," are some of the props you can pass to an ",(0,s.jsx)(n.code,{children:"<img>"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Here is an example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'// Remember to type your props!\ninterface AvatarProps {\n  src: string;\n  alt: string;\n  width: number;\n  height: number;\n}\n\nfunction Avatar() {\n  return (\n    <img\n      // Props that you pass to <img>\n      className="avatar"\n      src={src}\n      alt={alt}\n      width={width}\n      height={height}\n    />\n  );\n}\n\nexport default function Profile() {\n  return <Avatar src="https://Elaine.jpg" alt="Elaine" width={100} height={100} />;\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["While the props you can pass to an ",(0,s.jsx)(n.code,{children:"<img>"})," tag are predefined, you can pass any props to your own components to customize them."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"passing-props-to-a-component",children:"Passing props to a component"}),"\n",(0,s.jsxs)(n.p,{children:["In this code, the ",(0,s.jsx)(n.code,{children:"Profile"})," component isn\u2019t passing any props to its child component, ",(0,s.jsx)(n.code,{children:"Avatar"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"export default function Profile() {\n  return <Avatar />;\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can give ",(0,s.jsx)(n.code,{children:"Avatar"})," some props in two steps."]}),"\n",(0,s.jsx)(n.h4,{id:"step-1-pass-props-to-the-child-component",children:"Step 1: Pass props to the child component"}),"\n",(0,s.jsxs)(n.p,{children:["First, pass some props to ",(0,s.jsx)(n.code,{children:"Avatar"}),". For example, let\u2019s pass two props: ",(0,s.jsx)(n.code,{children:"person"})," (an object), and ",(0,s.jsx)(n.code,{children:"size"})," (a number):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'export default function Profile() {\n  return <Avatar person={{ name: "Elaine", imageId: "1" }} size={100} />;\n}\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Recall that double curly braces after ",(0,s.jsx)(n.code,{children:"person="})," denote that there is an object inside the JSX curlies."]})}),"\n",(0,s.jsxs)(n.p,{children:["Now you can read these props inside the ",(0,s.jsx)(n.code,{children:"Avatar"})," component."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"step-2-read-props-inside-the-child-component",children:"Step 2: Read props inside the child component"}),"\n",(0,s.jsxs)(n.p,{children:["You can read these props by listing their names ",(0,s.jsx)(n.code,{children:"person, size"})," separated by the commas inside ",(0,s.jsx)(n.code,{children:"({"})," and ",(0,s.jsx)(n.code,{children:"})"})," directly after ",(0,s.jsx)(n.code,{children:"function Avatar"}),". This lets you use them inside the ",(0,s.jsx)(n.code,{children:"Avatar"})," code, like you would with a variable."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"function Avatar({ person, size }) {\n  // person and size are available here\n}\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Add some logic to ",(0,s.jsx)(n.code,{children:"Avatar"})," that uses the person and size props for rendering, and you\u2019re done."]}),"\n",(0,s.jsxs)(n.p,{children:["Now you can configure ",(0,s.jsx)(n.code,{children:"Avatar"})," to render in many different ways with different props."]}),"\n",(0,s.jsxs)(o.A,{children:[(0,s.jsx)(i.A,{value:"App.js",label:"App.js",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"import { getImageUrl } from './utils.js';\n\nfunction Avatar({ person, size }) {\nreturn (\n<img\n      className=\"avatar\"\n      src={getImageUrl(person)}\n      alt={person.name}\n      width={size}\n      height={size}\n    />\n);\n}\n\nexport default function Profile() {\nreturn (\n\n<div>\n<Avatar\nsize={100}\nperson={{\n          name: 'Elaine Shu',\n          imageId: '1'\n        }}\n/>\n<Avatar\nsize={100}\nperson={{\n          name: 'Cady He',\n          imageId: '2'\n        }}\n/>\n</div>\n);\n}\n\n"})})}),(0,s.jsx)(i.A,{value:"util.js",label:"util.js",default:!0,children:(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"export function getImageUrl(person, size = 's') {\n  return (\n    'https://i.imgur.com/' +\n    person.imageId +\n    size +\n    '.jpg'\n  );\n}\n\n"})})})]}),"\n",(0,s.jsxs)(n.p,{children:["Props let you think about parent and child components independently. For example, you can change the ",(0,s.jsx)(n.code,{children:"person"})," or the ",(0,s.jsx)(n.code,{children:"size"})," props inside ",(0,s.jsx)(n.code,{children:"Profile"})," without having to think about how ",(0,s.jsx)(n.code,{children:"Avatar"})," uses them. Similarly, you can change how the ",(0,s.jsx)(n.code,{children:"Avatar"})," uses these props, without looking at the ",(0,s.jsx)(n.code,{children:"Profile"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["You can think of props like function arguments-in fact, React component functions accept a single argument, a ",(0,s.jsx)(n.code,{children:"props"})," object:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"function Avatar(props) {\n  let person = props.person;\n  let size = props.size;\n  // ...\n}\n"})}),"\n",(0,s.jsx)(n.p,{children:"Usually you don\u2019t need the whole props object itself, so you destructure it into individual props."}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsxs)(n.p,{children:[(0,s.jsxs)(n.strong,{children:["Don\u2019t miss the pair of ",(0,s.jsx)(n.code,{children:"{"})," and ",(0,s.jsx)(n.code,{children:"}"})," curlies inside of ",(0,s.jsx)(n.code,{children:"("})," and ",(0,s.jsx)(n.code,{children:")"})]})," when declaring props:"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"function Avatar({ person, size }) {\n  // ...\n}\n"})}),(0,s.jsx)(n.p,{children:"This syntax is called \u201cdestructuring\u201d and is equivalent to reading properties from a function parameter:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"function Avatar(props) {\n  let person = props.person;\n  let size = props.size;\n  // ...\n}\n"})})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"specifying-a-default-value-for-a-prop",children:"Specifying a default value for a prop"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'//you can specify a default value right after the parameter with "="\nfunction Avatar({ person, size = 100 }) {\n  // ...\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"forwarding-props-with-the-jsx-spread-syntax",children:"Forwarding props with the JSX spread syntax"}),"\n",(0,s.jsx)(n.p,{children:"Sometimes, passing props gets very repetitive. Some components forward all of their props to their children, like how this Profile does with Avatar. Because they don\u2019t use any of their props directly, it can make sense to use a more concise \u201cspread\u201d syntax:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'function Profile({ person, size, isSepia, thickBorder }) {\n  return (\n    <div className="card">\n      <Avatar {...props} /> //is equivalent to:\n      {/*  <Avatar\n        person={person}\n        size={size}\n        isSepia={isSepia}\n        thickBorder={thickBorder}\n      /> */}\n    </div>\n  );\n}\n'})}),"\n",(0,s.jsx)(n.h4,{id:"how-props-change-over-time",children:"How props change over time"}),"\n",(0,s.jsx)(n.p,{children:"Props reflect a component\u2019s data at any point in time -- meaning it can be updated (for example when there's new data or a user interaction)."}),"\n",(0,s.jsxs)(n.p,{children:["For example, a clock can take a ",(0,s.jsx)(n.code,{children:"time"})," prop, which changes every second!"]}),"\n",(0,s.jsx)(n.p,{children:"Since props are immutable, when a component needs to change its props it will have to \u201cask\u201d its parent component to pass it new props\u2014a new object!"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Don\u2019t try to \u201cchange props\u201d. When you need to respond to the user input (like changing the selected color), you will need to \u201cset state\u201d, which you can learn about in Lecture 5."})}),"\n",(0,s.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},9329:(e,n,r)=>{r.d(n,{A:()=>o});r(6540);var t=r(4164);const s={tabItem:"tabItem_Ymn6"};var a=r(4848);function o(e){let{children:n,hidden:r,className:o}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,t.A)(s.tabItem,o),hidden:r,children:n})}},5537:(e,n,r)=>{r.d(n,{A:()=>w});var t=r(6540),s=r(4164),a=r(5627),o=r(6347),i=r(372),c=r(604),l=r(1861),d=r(8749);function p(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:r}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return p(e).map((e=>{let{props:{value:n,label:r,attributes:t,default:s}}=e;return{value:n,label:r,attributes:t,default:s}}))}(r);return function(e){const n=(0,l.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,r])}function h(e){let{value:n,tabValues:r}=e;return r.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:r}=e;const s=(0,o.W6)(),a=function(e){let{queryString:n=!1,groupId:r}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:n,groupId:r});return[(0,c.aZ)(a),(0,t.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(s.location.search);n.set(a,e),s.replace({...s.location,search:n.toString()})}),[a,s])]}function x(e){const{defaultValue:n,queryString:r=!1,groupId:s}=e,a=u(e),[o,c]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=r.find((e=>e.default))??r[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:a}))),[l,p]=m({queryString:r,groupId:s}),[x,f]=function(e){let{groupId:n}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,a]=(0,d.Dv)(r);return[s,(0,t.useCallback)((e=>{r&&a.set(e)}),[r,a])]}({groupId:s}),g=(()=>{const e=l??x;return h({value:e,tabValues:a})?e:null})();(0,i.A)((()=>{g&&c(g)}),[g]);return{selectedValue:o,selectValue:(0,t.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),p(e),f(e)}),[p,f,a]),tabValues:a}}var f=r(9136);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=r(4848);function v(e){let{className:n,block:r,selectedValue:t,selectValue:o,tabValues:i}=e;const c=[],{blockElementScrollPositionUntilNextRender:l}=(0,a.a_)(),d=e=>{const n=e.currentTarget,r=c.indexOf(n),s=i[r].value;s!==t&&(l(n),o(s))},p=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=c.indexOf(e.currentTarget)+1;n=c[r]??c[0];break}case"ArrowLeft":{const r=c.indexOf(e.currentTarget)-1;n=c[r]??c[c.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":r},n),children:i.map((e=>{let{value:n,label:r,attributes:a}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>{c.push(e)},onKeyDown:p,onClick:d,...a,className:(0,s.A)("tabs__item",g.tabItem,a?.className,{"tabs__item--active":t===n}),children:r??n},n)}))})}function b(e){let{lazy:n,children:r,selectedValue:a}=e;const o=(Array.isArray(r)?r:[r]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===a));return e?(0,t.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=x(e);return(0,j.jsxs)("div",{className:(0,s.A)("tabs-container",g.tabList),children:[(0,j.jsx)(v,{...n,...e}),(0,j.jsx)(b,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,j.jsx)(y,{...e,children:p(e.children)},String(n))}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>i});var t=r(6540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);
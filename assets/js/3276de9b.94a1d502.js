"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8087],{5778:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var n=t(4848),o=t(8453);const s={sidebar_position:3},r="Git & GitHub",a={id:"Readings/git",title:"Git & GitHub",description:'"git" can mean anything, depending on your mood.',source:"@site/docs/Readings/git.mdx",sourceDirName:"Readings",slug:"/Readings/git",permalink:"/docs/Readings/git",draft:!1,unlisted:!1,editUrl:"https://github.com/CS61D/website/tree/main/docs/Readings/git.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Markdown",permalink:"/docs/Readings/markdown"},next:{title:"Lecture 4 \u2014 Basic React",permalink:"/docs/Readings/basic-react/"}},l={},c=[{value:"Git Overview",id:"git-overview",level:2},{value:"A basic Git workflow",id:"a-basic-git-workflow",level:2},{value:"Branches",id:"branches",level:2},{value:"Merge conflicts",id:"merge-conflicts",level:3},{value:"GitHub",id:"github",level:2},{value:"Pull Requests",id:"pull-requests",level:3},{value:"Issues",id:"issues",level:3},{value:"Actions",id:"actions",level:3},{value:".gitignore",id:"gitignore",level:2},{value:"Global .gitignore",id:"global-gitignore",level:3},{value:"Git Quick Reference",id:"git-quick-reference",level:2},{value:"git init - Initialize (init) a git repository",id:"git-init---initialize-init-a-git-repository",level:3},{value:"git status - Check the status of your repository",id:"git-status---check-the-status-of-your-repository",level:3},{value:"git add - Add files to the staging area",id:"git-add---add-files-to-the-staging-area",level:3},{value:"git commit - Commit changes to the repository",id:"git-commit---commit-changes-to-the-repository",level:3},{value:"git remote add origin - Add a remote repository to existing local repository",id:"git-remote-add-origin---add-a-remote-repository-to-existing-local-repository",level:3},{value:"git push - Push changes to a remote repository",id:"git-push---push-changes-to-a-remote-repository",level:3},{value:"git clone - Clone a remote repository",id:"git-clone---clone-a-remote-repository",level:3},{value:"git pull - Pull changes from a remote repository",id:"git-pull---pull-changes-from-a-remote-repository",level:3},{value:"git status - Check the status of your repository",id:"git-status---check-the-status-of-your-repository-1",level:3},{value:"git log - View the commit history",id:"git-log---view-the-commit-history",level:3},{value:"git branch - Create, list, or delete branches",id:"git-branch---create-list-or-delete-branches",level:3},{value:"git checkout - Switch branches or view a previous commit",id:"git-checkout---switch-branches-or-view-a-previous-commit",level:3},{value:"git restore - Discard changes in working directory or unstage files",id:"git-restore---discard-changes-in-working-directory-or-unstage-files",level:3},{value:"git stash - Temporarily store changes",id:"git-stash---temporarily-store-changes",level:3},{value:"git merge",id:"git-merge",level:3},{value:"git diff",id:"git-diff",level:3}];function h(e){const i={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",section:"section",span:"span",strong:"strong",sup:"sup",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"git--github",children:"Git & GitHub"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsx)(i.p,{children:'"git" can mean anything, depending on your mood.'}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:'random three-letter combination that is pronounceable, and not\nactually used by any common UNIX command. The fact that it is a\nmispronunciation of "get" may or may not be relevant.'}),"\n",(0,n.jsx)(i.li,{children:"stupid. contemptible and despicable. simple. Take your pick from the\ndictionary of slang."}),"\n",(0,n.jsx)(i.li,{children:'"global information tracker": you\'re in a good mood, and it actually\nworks for you. Angels sing, and a light suddenly fills the room.'}),"\n",(0,n.jsx)(i.li,{children:'"goddamn idiotic truckload of sh*t": when it breaks'}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["- ",(0,n.jsxs)(i.a,{href:"https://github.com/git/git/blob/fe5e7f332c8a95680a869eaca8033213676cbc7b/README",rel:"nofollow",children:["Original Git README file",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.img,{src:"/img/link-icons/github.svg",alt:"github",className:"github-icon",style:{width:"16px",height:"16px",marginLeft:"0.25rem",verticalAlign:"baseline"}})})]})]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsx)(i.p,{children:'"I\'m an egotistical bastard, so I name all my projects after myself. First Linux, now git."'}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"- Linus Torvalds, original author of git"}),"\n",(0,n.jsx)(i.h2,{id:"git-overview",children:"Git Overview"}),"\n",(0,n.jsxs)(i.p,{children:["If you write code, using git is non-negotiable. In short, git allows you to keep track of different versions of your codebase, and helps your rectify differences between these versions. You can easily restore your codebase to a previous version (known as a commit), or work on multiple independent features at the same time on their own ",(0,n.jsx)(i.a,{href:"#branches",children:"branches"}),"."]}),"\n",(0,n.jsx)(i.p,{children:"Additionally, git makes it feasible to collaborate on projects with thousands of other developers. Each developer has a copy of the source code on their own local machine, and can make changes without needing to always be connected to a centralized server. When multiple developers have made changes to different pieces of the codebase, git can automatically merge these changes together."}),"\n",(0,n.jsxs)(i.p,{children:["Also checkout ",(0,n.jsxs)(i.a,{href:"https://www.youtube.com/watch?v=hwP7WQkmECE",rel:"nofollow",children:["Git in 100 seconds",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.img,{src:"/img/link-icons/youtube.svg",alt:"youtube",className:"glossary-icon",style:{width:"16px",height:"16px",marginLeft:"0.25rem",verticalAlign:"baseline"}})})]}),"\nOr for a super overkill deep dive, the official ",(0,n.jsxs)(i.a,{href:"https://git-scm.com/book/en/v2",rel:"nofollow",children:["Pro Git book",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{className:"glossary-icon",children:" \u2197"})})]})]}),"\n",(0,n.jsx)(i.h2,{id:"a-basic-git-workflow",children:"A basic Git workflow"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"diagram",src:t(1785).A+"",width:"476",height:"573"})}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsxs)(i.a,{href:"https://excalidraw.com/#json=Va2FBPXIm34vDMfpI3Rfm,zgFdHBywozgTMfExv2mulw",rel:"nofollow",children:["View Diagram in\nExcalidraw",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{className:"glossary-icon",children:" \u2197"})})]})}),"\n",(0,n.jsxs)(i.p,{children:["Once you have ",(0,n.jsx)(i.a,{href:"#git-init---initialize-init-a-git-repository",children:"created a git repository"})," (repo), git does not automatically start saving (tracking) changes. The edits which are saved to your local device but not to git are called your ",(0,n.jsx)(i.strong,{children:"working tree"}),". To save these changes to git, we create what is called a commit."]}),"\n",(0,n.jsxs)(i.p,{children:["Before creating a commit, we first must prepare it by specifying which changes from the working tree we want to save. We do this by ",(0,n.jsx)(i.strong,{children:"adding"})," the changes to the ",(0,n.jsx)(i.strong,{children:"staging area"}),". Once we have added all the changes we want to save to the staging area, we can create a commit with a message describing the changes made."]}),"\n",(0,n.jsx)(i.p,{children:"Finally, if our local repository is also hosted on GitHub (known as having a remote repository), we can push our changes to GitHub. This will make our changes available to other developers working on the project, who can pull in our changes to their local repository."}),"\n",(0,n.jsx)(i.h2,{id:"branches",children:"Branches"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{alt:"branches",src:t(993).A+"",width:"968",height:"496"})}),"\n",(0,n.jsx)(i.p,{children:"Our basic workflow of creating commits to our repository allows us to revert back to previous versions of our codebase, but it still does not help us handle the complexity of having many developers working on the same codebase. This is where branches come in."}),"\n",(0,n.jsxs)(i.p,{children:["Every repository has a default branch, typically called ",(0,n.jsx)(i.code,{children:"main"})," or ",(0,n.jsx)(i.code,{children:"master"}),". This default branch contains code which has been reviewed and is ready to be used in a production setting. Before directly making changes to this default branch, a developer creates their own branch to develop an individual feature or fix a bug. This branch then has its own commit history, and can be worked on without interfering with the main branch."]}),"\n",(0,n.jsxs)(i.p,{children:["Once the feature branch is ready, it can then be ",(0,n.jsx)(i.a,{href:"#git-merge",children:"merged"})," back into the main branch, often through a ",(0,n.jsx)(i.a,{href:"#pull-requests",children:"pull request"}),". The commits from the feature branch are then added to the commit history of the main branch or can be squashed into a single merge commit. ",(0,n.jsx)(i.sup,{children:(0,n.jsx)(i.a,{href:"#user-content-fn-1",id:"user-content-fnref-1","data-footnote-ref":!0,"aria-describedby":"footnote-label",children:"1"})})]}),"\n",(0,n.jsx)(i.h3,{id:"merge-conflicts",children:"Merge conflicts"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"<<<<<<< HEAD\nconflicting changes 1\n=======\nconflict changes 2\n>>>>>>> conflict2\n"})}),"\n",(0,n.jsxs)(i.p,{children:["Merge conflicts occur when two branches are merged with inconsistent changes. Git does not know which changes should be kept, so it shows ",(0,n.jsx)(i.em,{children:"both"})," changes and the developer must manually pick which changes to keep. GitHub provides an interactive UI for resolving merge conflicts, but they can also be resolved locally by deleting the conflict markers (the ",(0,n.jsx)(i.code,{children:"<<<<<<<"}),", ",(0,n.jsx)(i.code,{children:"======="}),", and ",(0,n.jsx)(i.code,{children:">>>>>>>"})," lines) and any unwanted code in the merge."]}),"\n",(0,n.jsx)(i.h2,{id:"github",children:"GitHub"}),"\n",(0,n.jsx)(i.p,{children:"Git is the open source version control software which you just learned how to use. GitHub is a hosting provider that allows you to store your git repositories in the cloud. GitLab and Bitbucket are other popular alternatives to GitHub, although they have a much smaller market share."}),"\n",(0,n.jsx)(i.p,{children:"Since git repositories are almost always hosted on GitHub, it can be easy to confuse the two. GitHub layers features on top of git, which have become essential to the modern development workflow. Understanding usage of core features of GitHub is almost as important as understanding how to use git itself."}),"\n",(0,n.jsx)(i.h3,{id:"pull-requests",children:"Pull Requests"}),"\n",(0,n.jsxs)(i.p,{children:["Pull requests (PRs) are proposals to ",(0,n.jsx)(i.a,{href:"#git-merge",children:"merge"})," changes from one branch into another. They can be assigned reviewers, who can leave comments and suggestions on the proposed changes. GitHub provides a ",(0,n.jsx)(i.a,{href:"#git-diff",children:"diff"})," view in the browser for inspecting modified files."]}),"\n",(0,n.jsx)(i.h3,{id:"issues",children:"Issues"}),"\n",(0,n.jsxs)(i.p,{children:['Issues are general purpose "posts" associated with a GitHub repo. Most often, they are used to report bugs or feature requests. Issues can be referenced in pull requests which address them, or be assigned to a specific developer to fix. When and issue is resolved, it is marked as ',(0,n.jsx)(i.code,{children:"closed"}),"."]}),"\n",(0,n.jsx)(i.h3,{id:"actions",children:"Actions"}),"\n",(0,n.jsxs)(i.p,{children:["GitHub actions are way of automating continuous integration and continuous development (CI/CD) tasks. For example, you can run a test suite on every pull request to make sure that it does not introduce any breaking changes. GitHub actions are defined in a ",(0,n.jsx)(i.code,{children:".github/workflows"})," directory in your repository and will be covered in more detail at the end of the course."]}),"\n",(0,n.jsx)(i.h2,{id:"gitignore",children:".gitignore"}),"\n",(0,n.jsxs)(i.p,{children:["Very often times, files will be generated within a git repository which should not be tracked by git or pushed to GitHub. Examples include, build outputs (/build), installed dependencies (/node_modules), editor configuration files (/.vscode), or ",(0,n.jsxs)(i.a,{href:"../glossary#environment-variable",children:["environment variables",(0,n.jsx)(i.span,{className:"glossary-icon",children:" \ud83d\udcd6"})]})," (.env). To prevent these files from being tracked, you can create a ",(0,n.jsx)(i.code,{children:".gitignore"})," file in the root of your repository. This file can specify exact file name, file extensions, or directories to ignore."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-python",metastring:'title=".gitignore"',children:"# Ignore a single file\n.env\n\n# Ignore all files in a directory\n/node_modules\n\n# Ignore all files with a specific extension\n*.log\n"})}),"\n",(0,n.jsxs)(i.p,{children:["When you create a repository on GitHub, you will be prompted to create a ",(0,n.jsx)(i.code,{children:".gitignore"})," and have the option to select a template. Selecting the ",(0,n.jsx)(i.code,{children:"Node"})," template should be sufficient for most projects you build with the technologies we cover in this course."]}),"\n",(0,n.jsx)(i.h3,{id:"global-gitignore",children:"Global .gitignore"}),"\n",(0,n.jsxs)(i.p,{children:["In addition to a project's ",(0,n.jsx)(i.code,{children:".gitignore"})," file, you can configure your own global ",(0,n.jsx)(i.code,{children:".gitignore"})," file which will apply to all repositories on your machine. This is useful for ignoring files which are specific to your development environment, such as editor configuration files. It is also useful for ignoring files which are generated by your operating system, such as ",(0,n.jsx)(i.code,{children:".DS_Store"})," files on macOS. To create a and configure a global ",(0,n.jsx)(i.code,{children:".gitignore"})," file, run the following commands in your root directory:"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"touch .gitignore_global # Create global .gitignore file\ngit config --global core.excludesfile ~/.gitignore_global # Tell git to use your global .gitignore file\ncode .gitignore_global # Open the global .gitignore file in vscode\n"})}),"\n",(0,n.jsx)(i.h2,{id:"git-quick-reference",children:"Git Quick Reference"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsxs)(i.strong,{children:["Check out the ",(0,n.jsxs)(i.a,{href:"https://education.github.com/git-cheat-sheet-education.pdf",rel:"nofollow",children:["GitHub",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.img,{src:"/img/link-icons/github.svg",alt:"github",className:"github-icon",style:{width:"16px",height:"16px",marginLeft:"0.25rem",verticalAlign:"baseline"}})})]})," and ",(0,n.jsxs)(i.a,{href:"https://about.gitlab.com/images/press/git-cheat-sheet.pdf",rel:"nofollow",children:["GitLab",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.span,{className:"glossary-icon",children:" \u2197"})})]})," official cheat sheets for a more comprehensive reference."]})}),"\n",(0,n.jsx)(i.h3,{id:"git-init---initialize-init-a-git-repository",children:"git init - Initialize (init) a git repository"}),"\n",(0,n.jsxs)(i.p,{children:["If you are starting a new project, this is likely the first command you will run, unless you are ",(0,n.jsx)(i.a,{href:"#git-clone---clone-a-remote-repository",children:"cloning"})," an existing repository onto your local machine."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git init\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-status---check-the-status-of-your-repository",children:"git status - Check the status of your repository"}),"\n",(0,n.jsx)(i.p,{children:"Shows you which files have been modified, which files are staged for commit, and which files are not tracked by git."}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git status\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-add---add-files-to-the-staging-area",children:"git add - Add files to the staging area"}),"\n",(0,n.jsxs)(i.p,{children:["Files must be staged before they can be committed. Most often you will use ",(0,n.jsx)(i.code,{children:"git add ."})," to add all files in the current directory."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git add . # Add all files in the current directory\ngit add file1.txt file2.txt # Add specific files\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-commit---commit-changes-to-the-repository",children:"git commit - Commit changes to the repository"}),"\n",(0,n.jsxs)(i.p,{children:["Think of making a commit like ",(0,n.jsx)(i.strong,{children:"saving"})," your changes. At any point, you can revert back to a previous commit (or save) or jump between commits."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:'git commit -m "All commits must have a message"\n'})}),"\n",(0,n.jsx)(i.p,{children:"Be sure to use descriptive commit messages so that it will be easy to understand what changes were made when looking back at the commit history."}),"\n",(0,n.jsx)(i.h3,{id:"git-remote-add-origin---add-a-remote-repository-to-existing-local-repository",children:"git remote add origin - Add a remote repository to existing local repository"}),"\n",(0,n.jsx)(i.p,{children:'Use this command you have a local repository, and want to push it to GitHub. First create the GitHub repository to get the remote URL, and then "add" the remote URL to your local repository so that you can "push" your changes to GitHub.'}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"# Replace the URL with the URL of your repository\ngit remote add origin https://github.com/CS61D/my-repo.git\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-push---push-changes-to-a-remote-repository",children:"git push - Push changes to a remote repository"}),"\n",(0,n.jsxs)(i.p,{children:["If your local repository is also hosted on GitHub, this will push your local changes to GitHub. You may sometimes need to ",(0,n.jsx)(i.a,{href:"#git-pull---pull-changes-from-a-remote-repository",children:"pull"})," the latest changes from GitHub before you can push your changes."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git push origin main # Replace main with the branch you want to push to\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-clone---clone-a-remote-repository",children:"git clone - Clone a remote repository"}),"\n",(0,n.jsx)(i.p,{children:"If a repository is already hosted on GitHub, you can clone it to your local machine to be able to work on a local copy."}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"# Replace the URL with the URL of your repository\ngit clone https://github.com/CS61D/my-repo.git\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-pull---pull-changes-from-a-remote-repository",children:"git pull - Pull changes from a remote repository"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git pull origin main # Replace main with the branch you want to pull from\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-status---check-the-status-of-your-repository-1",children:"git status - Check the status of your repository"}),"\n",(0,n.jsx)(i.p,{children:"Shows you which files have been modified, which files are staged for commit, and which files are not tracked by git."}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git status\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-log---view-the-commit-history",children:"git log - View the commit history"}),"\n",(0,n.jsx)(i.p,{children:"Each commit has a unique hash, a message, and the author. You can use the hash to revert back to a previous commit."}),"\n",(0,n.jsxs)(i.p,{children:["Sometimes you may see a full 40 character long git hash like ",(0,n.jsx)(i.code,{children:"762d1585e4075dc8dcee917fc8727ea70365989f"}),", and other times you may see it truncated to just the first 7 characters like ",(0,n.jsx)(i.code,{children:"762d158"}),". The full hash is always unique even across repositories. The shortened hashes are only unique within a single repository. You can typically just use the short hash to refer to a commit."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git log\ngit log --oneline # View a simplified log with only the shortened commit hash and message\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-branch---create-list-or-delete-branches",children:"git branch - Create, list, or delete branches"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git branch # List all branches\ngit branch new-branch # Create a new branch\ngit checkout -b new-branch # Create a new branch and switch to it\ngit branch -d branch-name # Delete a branch\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-checkout---switch-branches-or-view-a-previous-commit",children:"git checkout - Switch branches or view a previous commit"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git checkout branch-name # Switch to a different branch\n\n# Check out a new branch from a previous commit hash\n# Find the hash of a commit by running `git log`\ngit checkout -b new-branch 762d158\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-restore---discard-changes-in-working-directory-or-unstage-files",children:"git restore - Discard changes in working directory or unstage files"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git restore file.txt # Discard changes in file.txt. Revert contents back to last commit\ngit restore --staged file.txt # Unstage file.txt, undoing `git add`\n"})}),"\n",(0,n.jsxs)(i.p,{children:["Running ",(0,n.jsx)(i.code,{children:"git restore"})," on a file is irreversible. An alternative is to ",(0,n.jsx)(i.code,{children:"stash"})," the changes, which allows you to bring them back later."]}),"\n",(0,n.jsx)(i.h3,{id:"git-stash---temporarily-store-changes",children:"git stash - Temporarily store changes"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git stash # Stash all uncommitted changes\ngit stash pop # Apply the most recent stash\ngit stash list # List all stashes\ngit stash push file1.txt # Stash only file1.txt\n"})}),"\n",(0,n.jsx)(i.h3,{id:"git-merge",children:"git merge"}),"\n",(0,n.jsxs)(i.p,{children:["Merge changes from one branch into another. If you make a ",(0,n.jsx)(i.a,{href:"#pull-requests",children:"pull request"}),' on GitHub, then "merging" the pull request will automatically merge the changes from one branch into another, meaning you often do not have to run ',(0,n.jsx)(i.code,{children:"git merge"})," locally."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:'# Merge other-branch into current branch\ngit merge other-branch -m "Merge commit message"\ngit merge other-branch --no-edit # Use default merge commit message (recommended)\n'})}),"\n",(0,n.jsx)(i.p,{children:"(Todo talk about merge conflicts)"}),"\n",(0,n.jsx)(i.h3,{id:"git-diff",children:"git diff"}),"\n",(0,n.jsxs)(i.p,{children:["View the difference between two commits. If you make a ",(0,n.jsx)(i.a,{href:"#pull-requests",children:"pull request"})," on GitHub, you will automatically be shown the differences between the two branches, meaning you often do not need to run this command locally."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-bash",children:"git diff other-branch # View difference between current branch and other-branch\ngit diff other-branch file1.txt # View difference between current branch and other-branch only for file1.txt\n"})}),"\n","\n",(0,n.jsxs)(i.section,{"data-footnotes":!0,className:"footnotes",children:[(0,n.jsx)(i.h2,{className:"sr-only",id:"footnote-label",children:"Footnotes"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsxs)(i.li,{id:"user-content-fn-1",children:["\n",(0,n.jsxs)(i.p,{children:["There is also a third popular option called ",(0,n.jsx)(i.em,{children:"rebasing"}),". The differences are not particularly important for our purposes, but you can read the ",(0,n.jsxs)(i.a,{href:"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/about-pull-request-merges",rel:"nofollow",children:["Github docs",(0,n.jsx)(i.span,{children:(0,n.jsx)(i.img,{src:"/img/link-icons/github.svg",alt:"github",className:"github-icon",style:{width:"16px",height:"16px",marginLeft:"0.25rem",verticalAlign:"baseline"}})})]})," on all the ways to merge in a pull request. ",(0,n.jsx)(i.a,{href:"#user-content-fnref-1","data-footnote-backref":"","aria-label":"Back to reference 1",className:"data-footnote-backref",children:"\u21a9"})]}),"\n"]}),"\n"]}),"\n"]})]})}function d(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},993:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/git-branches-cf26453cf7a1d2e58152c93990402c15.png"},1785:(e,i,t)=>{t.d(i,{A:()=>n});const n=t.p+"assets/images/git-08757a464102d074ab83b859a6b68769.svg"},8453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>a});var n=t(6540);const o={},s=n.createContext(o);function r(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);
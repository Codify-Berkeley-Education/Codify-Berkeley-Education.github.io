"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5305],{213:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var t=s(4848),a=s(8453);const i={title:"10.2 - Relational Databases",metadata:["Can be provided",{as:"objects",or:"arrays"}]},o=void 0,l={id:"Readings/relational-databases-data-modeling/10.2",title:"10.2 - Relational Databases",description:"Relational databases are one of the most common types of databases. They organize data into tables, which consist of rows and columns. Some fundamental concepts are listed below:",source:"@site/docs/Readings/10-relational-databases-data-modeling/10.2.md",sourceDirName:"Readings/10-relational-databases-data-modeling",slug:"/Readings/relational-databases-data-modeling/10.2",permalink:"/docs/Readings/relational-databases-data-modeling/10.2",draft:!1,unlisted:!1,editUrl:"https://github.com/CS61D/website/tree/main/docs/Readings/10-relational-databases-data-modeling/10.2.md",tags:[],version:"current",frontMatter:{title:"10.2 - Relational Databases",metadata:["Can be provided",{as:"objects",or:"arrays"}]},sidebar:"tutorialSidebar",previous:{title:"10.1 - Introduction to Database Types",permalink:"/docs/Readings/relational-databases-data-modeling/10.1"},next:{title:"10.3 - Relationship Types",permalink:"/docs/Readings/relational-databases-data-modeling/10.3"}},r={},d=[];function c(e){const n={code:"code",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Relational databases are one of the most common types of databases. They organize data into tables, which consist of rows and columns. Some fundamental concepts are listed below:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"https://phoenixnap.com/kb/wp-content/uploads/2021/06/relational-database-table-elements.png",alt:"Relational Database Example"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Table"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Definition:"})," A table is a collection of related data entries that consists of columns and rows."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," A ",(0,t.jsx)(n.code,{children:"Customers"})," table with columns for ",(0,t.jsx)(n.code,{children:"CustomerID"}),", ",(0,t.jsx)(n.code,{children:"Name"}),", ",(0,t.jsx)(n.code,{children:"Email"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Row"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Definition:"})," A row, also known as a record or tuple, represents a single data item in a table."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," A row in the ",(0,t.jsx)(n.code,{children:"Customers"})," table with data: ",(0,t.jsx)(n.code,{children:"1, John Doe, john@example.com"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Column"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Definition:"})," A column, also known as a field or attribute, represents a data attribute within a table."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," The ",(0,t.jsx)(n.code,{children:"Email"})," column in the ",(0,t.jsx)(n.code,{children:"Customers"})," table."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Primary Key"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Definition:"})," A primary key is a unique identifier for a record in a table."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," ",(0,t.jsx)(n.code,{children:"CustomerID"})," in the ",(0,t.jsx)(n.code,{children:"Customers"})," table."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Foreign Key"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Definition:"})," A foreign key is a column that creates a relationship between two tables."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Example:"})," ",(0,t.jsx)(n.code,{children:"BuyerID"})," in the ",(0,t.jsx)(n.code,{children:"Orders"})," table might be a foreign key linking to the ",(0,t.jsx)(n.code,{children:"CustomerID"})," in the ",(0,t.jsx)(n.code,{children:"Customers"})," table."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Relationships"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Relationships describe how tables are linked to each other."}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Cardinality"})," refers to the numerical relationship between two entities. It specifies the number of instances of one entity that can be associated with an instance of another entity."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Relationship Types:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"One-to-One"}),"\n",(0,t.jsx)(n.li,{children:"One-to-Many"}),"\n",(0,t.jsx)(n.li,{children:"Many-to-Many"}),"\n",(0,t.jsx)(n.li,{children:"Self-Relationship"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var t=s(6540);const a={},i=t.createContext(a);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7051],{4290:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"glossary","title":"Glossary","description":"Many terms used throughout the 61d curriculum are applicable to more than one technology or tool we teach. In these circumstances, we will link to glossary definitions to provide a consistent explanation of the term.","source":"@site/docs/glossary.md","sourceDirName":".","slug":"/glossary","permalink":"/docs/glossary","draft":false,"unlisted":false,"editUrl":"https://github.com/CS61D/website/tree/main/docs/glossary.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Course Setup","permalink":"/docs/setup"},"next":{"title":"0. Git, Markdown, and Bash","permalink":"/docs/Assignments/git-md-bash"}}');var s=t(4848),a=t(8453);const r={sidebar_position:2},o="Glossary",c={},d=[{value:"General",id:"general",level:2},{value:"Environment Variable",id:"environment-variable",level:4},{value:"Dependency",id:"dependency",level:4},{value:"Dev Dependency",id:"dev-dependency",level:4},{value:"UUID (Universally Unique Identifier)",id:"uuid-universally-unique-identifier",level:4},{value:"Idempotency",id:"idempotency",level:4},{value:"Higher order function (or Callback Function)",id:"higher-order-function-or-callback-function",level:4},{value:"Compile Time",id:"compile-time",level:4},{value:"Runtime",id:"runtime",level:4}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",pre:"pre",span:"span",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"glossary",children:"Glossary"})}),"\n",(0,s.jsx)(n.p,{children:"Many terms used throughout the 61d curriculum are applicable to more than one technology or tool we teach. In these circumstances, we will link to glossary definitions to provide a consistent explanation of the term."}),"\n",(0,s.jsx)(n.h2,{id:"general",children:"General"}),"\n",(0,s.jsx)(n.h4,{id:"environment-variable",children:"Environment Variable"}),"\n",(0,s.jsx)(n.p,{children:"A variable that is set outside of the application code and is used to configure the application. Environment variables are used to store sensitive information like API keys, database credentials, etc. They are also used to configure the application for different environments like development, testing, and production."}),"\n",(0,s.jsx)(n.h4,{id:"dependency",children:"Dependency"}),"\n",(0,s.jsx)(n.p,{children:"A dependency is any library or package which your code needs to run. Any code that you call which you did not write from scratch is a dependency."}),"\n",(0,s.jsxs)(n.p,{children:["In our JavaScript context, dependencies are defined in a ",(0,s.jsx)(n.code,{children:"package.json"})," file. For instance, below are the dependencies for the 61d Docusaurus site:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",metastring:'title="package.json"',children:'{\n  "dependencies": {\n    "@docusaurus/core": "3.2.1",\n    "@docusaurus/preset-classic": "3.2.1",\n    "@mdx-js/react": "^3.0.0",\n    "clsx": "^2.0.0",\n    "dotenv": "^16.4.5",\n    "posthog-docusaurus": "^2.0.1",\n    "prism-react-renderer": "^2.3.0",\n    "react": "^18.0.0",\n    "react-dom": "^18.0.0",\n    "rehype-external-links": "^3.0.0"\n  }\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When you run ",(0,s.jsx)(n.code,{children:"bun install"}),", the dependencies listed are downloaded from the ",(0,s.jsxs)(n.a,{href:"https://www.npmjs.com/",rel:"nofollow",children:["node package registry",(0,s.jsx)(n.span,{children:(0,s.jsx)(n.span,{className:"glossary-icon",children:" \u2197"})})]})," and installed in the ",(0,s.jsx)(n.code,{children:"node_modules"})," directory."]}),"\n",(0,s.jsx)(n.h4,{id:"dev-dependency",children:"Dev Dependency"}),"\n",(0,s.jsx)(n.p,{children:"A dev dependency is a dependency that is only needed during development. For example, a code formatter like biome is only needed during development. Adding dev dependencies will not impact the production build of your application."}),"\n",(0,s.jsxs)(n.p,{children:["You can add a dev dependency by using the ",(0,s.jsx)(n.code,{children:"--dev"})," flag."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"bun add --dev @biomejs/biome\n"})}),"\n",(0,s.jsx)(n.h4,{id:"uuid-universally-unique-identifier",children:"UUID (Universally Unique Identifier)"}),"\n",(0,s.jsxs)(n.p,{children:["A UUID is a 128 bit label used to uniquely identify objects. In string form, it looks something like this: ",(0,s.jsx)(n.code,{children:"d15a3911-91db-40b0-bd79-a2bb6220d6d8"}),". UUIDs contain enough randomness such that you are unlikely to ever generate two of the same UUID unless you generate ",(0,s.jsxs)(n.a,{href:"https://en.wikipedia.org/wiki/Universally_unique_identifier#Collisions",rel:"nofollow",children:["literally quintillions of UUIDs",(0,s.jsx)(n.span,{children:(0,s.jsx)(n.span,{className:"glossary-icon",children:" \u2197"})})]}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["There are many variations and implementations of UUIDs. If you are generating primary keys for a database, use either ",(0,s.jsxs)(n.a,{href:"https://www.npmjs.com/package/ulidx",rel:"nofollow",children:["ULID",(0,s.jsx)(n.span,{children:(0,s.jsx)(n.span,{className:"glossary-icon",children:" \u2197"})})]})," or ",(0,s.jsxs)(n.a,{href:"https://www.npmjs.com/package/uuid",rel:"nofollow",children:["UUID v7",(0,s.jsx)(n.span,{children:(0,s.jsx)(n.span,{className:"glossary-icon",children:" \u2197"})})]}),". They can be sorted chronologically to the nearest millisecond, and are optimal for database performance."]}),"\n",(0,s.jsxs)(n.p,{children:["If database insert performance is not as important as having a shorter more url friendly identifier, ",(0,s.jsxs)(n.a,{href:"https://www.npmjs.com/package/nanoid",rel:"nofollow",children:["Nano ID",(0,s.jsx)(n.span,{children:(0,s.jsx)(n.span,{className:"glossary-icon",children:" \u2197"})})]})," is a good alternative."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"// Nano Id in a url\n// app.com/V1StGXR8_Z5jdHi6B-myT\n\n// UUID in a url\n// app.com/d15a3911-91db-40b0-bd79-a2bb6220d6d8\n"})}),"\n",(0,s.jsx)(n.h4,{id:"idempotency",children:"Idempotency"}),"\n",(0,s.jsx)(n.p,{children:"The property of a request to a database, server, or external API that it can be safely retried or repeated without having a different result than if the request was only made once."}),"\n",(0,s.jsxs)(n.p,{children:["Some types of requests are idempotent by default. Any api ",(0,s.jsx)(n.code,{children:"GET"})," request of sql ",(0,s.jsx)(n.code,{children:"SELECT"})," statement is idempotent because it does not mutate data. ",(0,s.jsx)(n.em,{children:"Most"})," api ",(0,s.jsx)(n.code,{children:"PUT"})," or sql ",(0,s.jsx)(n.code,{children:"UPDATE"})," statements are also idempotent. Multiple update requests with the same inputs will not alter the end database state."]}),"\n",(0,s.jsxs)(n.p,{children:["Requests which are not idempotent by default can be made to be idempotent with a bit of extra work. Take the example of completing a checkout on an e-commerce site like Amazon. If the user's connection is slow, they may click the submit button multiple times while waiting for a response. How can we ensure that a create order ",(0,s.jsx)(n.code,{children:"POST"})," request does not create multiple orders for the same checkout flow."]}),"\n",(0,s.jsxs)(n.p,{children:["For each checkout session, the client can generate a ",(0,s.jsx)(n.a,{href:"#uuid-universally-unique-identifier",children:"uuid"})," to serve as an ",(0,s.jsx)(n.em,{children:"idempotency key"}),". When the server receives the request, it first checks if a previous request has been processed with the same idempotency key. If not, it returns a response, and stores a mapping of the idempotency key to the response. If another request arrives later with the same idempotency key, it returns the stored response to the original request."]}),"\n",(0,s.jsxs)(n.p,{children:["See how ",(0,s.jsxs)(n.a,{href:"https://docs.stripe.com/api/idempotent_requests",rel:"nofollow",children:["stripe",(0,s.jsx)(n.span,{children:(0,s.jsx)(n.span,{className:"glossary-icon",children:" \u2197"})})]})," implements idempotency."]}),"\n",(0,s.jsx)(n.h4,{id:"higher-order-function-or-callback-function",children:"Higher order function (or Callback Function)"}),"\n",(0,s.jsxs)(n.p,{children:["A higher order function is any function that takes another function as an argument. For instance, the ",(0,s.jsx)(n.code,{children:"map"})," function takes a function as an argument and applies that function to each element in an array."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const numbers = [1, 2, 3, 4, 5];\n\n// We pass an arrow inline function to the map function\nconst doubled = numbers.map((num) => num * 2);\n// [2, 4, 6, 8, 10]\n"})}),"\n",(0,s.jsx)(n.h4,{id:"compile-time",children:"Compile Time"}),"\n",(0,s.jsx)(n.p,{children:"Compile time refers to any static code analysis which happens before your code is built and executes. The most important example discussed in 61d is TypeScript. TypeScript code is compiled down the JavaScript before it executes. All of the type checking executed by the typescript compiler happens as you are compiling your code into JavaScript, not while that JavaScript code is actually executing."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"#dev-dependency",children:"Dev Dependencies"})," are another example. You can use as many dev dependencies as you would like without impacting the end performance of your application, since these dependencies are stripped out at runtime."]}),"\n",(0,s.jsx)(n.h4,{id:"runtime",children:"Runtime"}),"\n",(0,s.jsx)(n.p,{children:"Runtime code is what actually executes. TypeScript type checks, lint errors, and other compile time checks are not actually executed at runtime."})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var i=t(6540);const s={},a=i.createContext(s);function r(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);
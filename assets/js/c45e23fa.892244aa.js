"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[282],{3326:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"Readings/advanced-state-management/6.2","title":"6.2 - Passing Data Deeply with Context","description":"Usually, you will pass information from a parent component to a child component via props. But passing props can become verbose and inconvenient if you have to pass them through many many components.","source":"@site/docs/Readings/6-advanced-state-management/6.2.md","sourceDirName":"Readings/6-advanced-state-management","slug":"/Readings/advanced-state-management/6.2","permalink":"/docs/Readings/advanced-state-management/6.2","draft":false,"unlisted":false,"editUrl":"https://github.com/CS61D/website/tree/main/docs/Readings/6-advanced-state-management/6.2.md","tags":[],"version":"current","frontMatter":{"title":"6.2 - Passing Data Deeply with Context","metadata":["Can be provided",{"as":"objects","or":"arrays"}]},"sidebar":"tutorialSidebar","previous":{"title":"6.1 - Extracting State Logic into a Reducer","permalink":"/docs/Readings/advanced-state-management/6.1"},"next":{"title":"6.3 - Combining Reducers and Context","permalink":"/docs/Readings/advanced-state-management/6.3"}}');var a=t(4848),i=t(8453),r=t(5537),s=t(9329);const l={title:"6.2 - Passing Data Deeply with Context",metadata:["Can be provided",{as:"objects",or:"arrays"}]},c=void 0,d={},h=[{value:"Context: an alternative to passing props",id:"context-an-alternative-to-passing-props",level:3},{value:"Step 1: Create the context",id:"step-1-create-the-context",level:3},{value:"Step 2: Use the context",id:"step-2-use-the-context",level:3},{value:"Step 3: Provide the context",id:"step-3-provide-the-context",level:3},{value:"Using and providing context from the same component",id:"using-and-providing-context-from-the-same-component",level:3}];function u(e){const n={admonition:"admonition",code:"code",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"Usually, you will pass information from a parent component to a child component via props. But passing props can become verbose and inconvenient if you have to pass them through many many components."}),"\n",(0,a.jsx)(n.p,{children:"Wouldn\u2019t it be great if there were a way to \u201cteleport\u201d data to the components in the tree that need it without passing props?"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"context-an-alternative-to-passing-props",children:"Context: an alternative to passing props"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Context"})," lets a parent component provide data to the entire tree below it, instead of using props. Consider this Heading component that accepts a ",(0,a.jsx)(n.code,{children:"level"})," for its size:"]}),"\n",(0,a.jsxs)(r.A,{children:[(0,a.jsx)(s.A,{value:"App.js",label:"App.js",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import Heading from './Heading.js';\nimport Section from './Section.js';\n\nexport default function Page() {\n  return (\n    <Section>\n      <Heading level={1}>Title</Heading>\n      <Heading level={2}>Heading</Heading>\n      <Heading level={3}>Sub-heading</Heading>\n      <Heading level={4}>Sub-sub-heading</Heading>\n      <Heading level={5}>Sub-sub-sub-heading</Heading>\n      <Heading level={6}>Sub-sub-sub-sub-heading</Heading>\n    </Section>\n  );\n}\n"})})}),(0,a.jsx)(s.A,{value:"Section.js",label:"Section.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'export default function Section({ children }) {\n  return <section className="section">{children}</section>;\n}\n'})})}),(0,a.jsx)(s.A,{value:"Heading.js",label:"Heading.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"export default function Heading({ level, children }) {\n  switch (level) {\n    case 1:\n      return <h1>{children}</h1>;\n    case 2:\n      return <h2>{children}</h2>;\n    case 3:\n      return <h3>{children}</h3>;\n    case 4:\n      return <h4>{children}</h4>;\n    case 5:\n      return <h5>{children}</h5>;\n    case 6:\n      return <h6>{children}</h6>;\n    default:\n      throw Error('Unknown level: ' + level);\n  }\n}\n"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["Let\u2019s say you want multiple headings within the same ",(0,a.jsx)(n.code,{children:"Section"})," to always have the same size. If you were to do this with props, you might pass a ",(0,a.jsx)(n.code,{children:"level"})," prop to each ",(0,a.jsx)(n.code,{children:"<Heading>"})," separately:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<Section>\n  <Heading level={3}>About</Heading>\n  <Heading level={3}>Photos</Heading>\n  <Heading level={3}>Videos</Heading>\n</Section>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["It would be nice if you could pass the level prop to the ",(0,a.jsx)(n.code,{children:"<Section>"})," component instead and remove it from the ",(0,a.jsx)(n.code,{children:"<Heading>"}),". This way you could enforce that all headings in the same section have the same size:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<Section level={3}>\n  <Heading>About</Heading>\n  <Heading>Photos</Heading>\n  <Heading>Videos</Heading>\n</Section>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["But how can the ",(0,a.jsx)(n.code,{children:"<Heading>"})," component know the level of its closest ",(0,a.jsx)(n.code,{children:"<Section>"}),"? You can'd do it with props alone. This is where context comes into play."]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Context"})," lets the parent component make some information available to any component in the tree below it\u2014no matter how deep\u2014without passing it explicitly through props."]}),"\n",(0,a.jsxs)(n.p,{children:["For this example, you will have ",(0,a.jsx)(n.code,{children:"Section"})," provide a context. (You can call it ",(0,a.jsx)(n.code,{children:"LevelContext"}),", since it\u2019s for the heading level.) ",(0,a.jsx)(n.code,{children:"Heading"})," will read from ",(0,a.jsx)(n.code,{children:"LevelContext"})," to know what ",(0,a.jsx)(n.code,{children:"level"})," value to use."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"step-1-create-the-context",children:"Step 1: Create the context"}),"\n",(0,a.jsx)(n.p,{children:"First, you need to create the context. You\u2019ll need to export it from a file so that your components can use it:"}),"\n",(0,a.jsx)(r.A,{children:(0,a.jsx)(s.A,{value:"LevelContext.js",label:"LevelContext.js",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import { createContext } from 'react';\n\nexport const LevelContext = createContext(1);\n"})})})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsxs)(n.strong,{children:["The only argument to ",(0,a.jsx)(n.code,{children:"createContext"})," is the default value."]})," We've set to 1. (Here, 1 refers to the biggest heading level)."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"step-2-use-the-context",children:"Step 2: Use the context"}),"\n",(0,a.jsxs)(n.p,{children:["In your file containing the ",(0,a.jsx)(n.code,{children:"Heading"})," component, import the ",(0,a.jsx)(n.code,{children:"useContext"})," Hook from React and your context:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'import { useContext } from "react";\nimport { LevelContext } from "./LevelContext.js";\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Change the ",(0,a.jsx)(n.code,{children:"Heading"})," component to have it read the value from the context you just created:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"export default function Heading({ children }) {\n  const level = useContext(LevelContext);\n  // ...\n}\n"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"useContext"})," is a Hook. Just like ",(0,a.jsx)(n.code,{children:"useState"})," and ",(0,a.jsx)(n.code,{children:"useReducer"}),", you can only call a Hook immediately inside a React component (not inside loops or conditions). ",(0,a.jsxs)(n.strong,{children:[(0,a.jsx)(n.code,{children:"useContext"})," tells React that the ",(0,a.jsx)(n.code,{children:"Heading"})," component wants to read the ",(0,a.jsx)(n.code,{children:"LevelContext"}),"."]})]}),"\n",(0,a.jsxs)(n.p,{children:["Now that the ",(0,a.jsx)(n.code,{children:"Heading"})," component doesn\u2019t have a ",(0,a.jsx)(n.code,{children:"level"})," prop, you don\u2019t need to pass the ",(0,a.jsx)(n.code,{children:"level"})," prop to ",(0,a.jsx)(n.code,{children:"Heading"})," in your JSX like this anymore:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<Section>\n  <Heading level={4}>Sub-sub-heading</Heading>\n  <Heading level={4}>Sub-sub-heading</Heading>\n  <Heading level={4}>Sub-sub-heading</Heading>\n</Section>\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Update the JSX so that it\u2019s the ",(0,a.jsx)(n.code,{children:"Section"})," that receives it instead:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"<Section level={4}>\n  <Heading>Sub-sub-heading</Heading>\n  <Heading>Sub-sub-heading</Heading>\n  <Heading>Sub-sub-heading</Heading>\n</Section>\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"step-3-provide-the-context",children:"Step 3: Provide the context"}),"\n",(0,a.jsxs)(n.p,{children:["So far, the ",(0,a.jsx)(n.code,{children:"Heading"})," components will all use the default ",(0,a.jsx)(n.code,{children:"level"})," of 1 we set previously. We now need to tell React that each ",(0,a.jsx)(n.code,{children:"Section"})," component provides context to its children ",(0,a.jsx)(n.code,{children:"Heading"})," components."]}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Section"})," component currently renders its children:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'export default function Section({ children }) {\n  return <section className="section">{children}</section>;\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Wrap them with a context provider to provide the ",(0,a.jsx)(n.code,{children:"LevelContext"})," to them:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'import { LevelContext } from "./LevelContext.js";\n\nexport default function Section({ level, children }) {\n  return (\n    <section className="section">\n      <LevelContext.Provider value={level}>{children}</LevelContext.Provider>\n    </section>\n  );\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["This tells React: \u201cif any component inside this ",(0,a.jsx)(n.code,{children:"<Section>"})," asks for ",(0,a.jsx)(n.code,{children:"LevelContext"}),", give them this level.\u201d The component will use the value of the nearest ",(0,a.jsx)(n.code,{children:"<LevelContext.Provider>"})," in the UI tree above it."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"using-and-providing-context-from-the-same-component",children:"Using and providing context from the same component"}),"\n",(0,a.jsxs)(n.p,{children:["Since context lets you read information from a component above, each ",(0,a.jsx)(n.code,{children:"Section"})," could read the level from the ",(0,a.jsx)(n.code,{children:"Section"})," above, and pass ",(0,a.jsx)(n.code,{children:"level"})," + 1 down automatically. Here is how you could do it:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'import { useContext } from "react";\nimport { LevelContext } from "./LevelContext.js";\n\nexport default function Section({ children }) {\n  const level = useContext(LevelContext);\n  return (\n    <section className="section">\n      <LevelContext.Provider value={level + 1}>\n        {children}\n      </LevelContext.Provider>\n    </section>\n  );\n}\n'})}),"\n",(0,a.jsxs)(n.p,{children:["With this change, you don\u2019t need to pass the level prop either to the ",(0,a.jsx)(n.code,{children:"<Section>"})," or to the ",(0,a.jsx)(n.code,{children:"<Heading>"}),":"]}),"\n",(0,a.jsxs)(r.A,{children:[(0,a.jsx)(s.A,{value:"App.js",label:"App.js",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'import Heading from "./Heading.js";\nimport Section from "./Section.js";\n\nexport default function Page() {\n  return (\n    <Section>\n      <Heading>Title</Heading>\n      <Section>\n        <Heading>Heading</Heading>\n        <Heading>Heading</Heading>\n        <Heading>Heading</Heading>\n        <Section>\n          <Heading>Sub-heading</Heading>\n          <Heading>Sub-heading</Heading>\n          <Heading>Sub-heading</Heading>\n          <Section>\n            <Heading>Sub-sub-heading</Heading>\n            <Heading>Sub-sub-heading</Heading>\n            <Heading>Sub-sub-heading</Heading>\n          </Section>\n        </Section>\n      </Section>\n    </Section>\n  );\n}\n'})})}),(0,a.jsx)(s.A,{value:"Section.js",label:"Section.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import { useContext } from 'react';\nimport { LevelContext } from './LevelContext.js';\n\nexport default function Section({ children }) {\n  const level = useContext(LevelContext);\n  return (\n    <section className=\"section\">\n      <LevelContext.Provider value={level + 1}>\n        {children}\n      </LevelContext.Provider>\n    </section>\n  );\n}\n"})})}),(0,a.jsx)(s.A,{value:"Heading.js",label:"Heading.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import { useContext } from 'react';\nimport { LevelContext } from './LevelContext.js';\n\nexport default function Heading({ children }) {\n  const level = useContext(LevelContext);\n  switch (level) {\n    case 0:\n      throw Error('Heading must be inside a Section!');\n    case 1:\n      return <h1>{children}</h1>;\n    case 2:\n      return <h2>{children}</h2>;\n    case 3:\n      return <h3>{children}</h3>;\n    case 4:\n      return <h4>{children}</h4>;\n    case 5:\n      return <h5>{children}</h5>;\n    case 6:\n      return <h6>{children}</h6>;\n    default:\n      throw Error('Unknown level: ' + level);\n  }\n}\n"})})}),(0,a.jsx)(s.A,{value:"LevelContext.js",label:"LevelContext.js",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:"import { createContext } from 'react';\n\nexport const LevelContext = createContext(0);\n"})})})]}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"It\u2019s not always better to use context instead of props! Sometimes props can help with readability if your data flow is very complex by making it explicit which component passed information to which component."})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(u,{...e})}):u(e)}},9329:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);var o=t(4164);const a={tabItem:"tabItem_Ymn6"};var i=t(4848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,i.jsx)("div",{role:"tabpanel",className:(0,o.A)(a.tabItem,r),hidden:t,children:n})}},5537:(e,n,t)=>{t.d(n,{A:()=>S});var o=t(6540),a=t(4164),i=t(5627),r=t(6347),s=t(372),l=t(604),c=t(1861),d=t(8749);function h(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,o.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:o,default:a}}=e;return{value:n,label:t,attributes:o,default:a}}))}(t);return function(e){const n=(0,c.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function x(e){let{queryString:n=!1,groupId:t}=e;const a=(0,r.W6)(),i=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(i),(0,o.useCallback)((e=>{if(!i)return;const n=new URLSearchParams(a.location.search);n.set(i,e),a.replace({...a.location,search:n.toString()})}),[i,a])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,i=u(e),[r,l]=(0,o.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const o=t.find((e=>e.default))??t[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:n,tabValues:i}))),[c,h]=x({queryString:t,groupId:a}),[g,m]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,i]=(0,d.Dv)(t);return[a,(0,o.useCallback)((e=>{t&&i.set(e)}),[t,i])]}({groupId:a}),v=(()=>{const e=c??g;return p({value:e,tabValues:i})?e:null})();(0,s.A)((()=>{v&&l(v)}),[v]);return{selectedValue:r,selectValue:(0,o.useCallback)((e=>{if(!p({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),m(e)}),[h,m,i]),tabValues:i}}var m=t(9136);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function f(e){let{className:n,block:t,selectedValue:o,selectValue:r,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.a_)(),d=e=>{const n=e.currentTarget,t=l.indexOf(n),a=s[t].value;a!==o&&(c(n),r(a))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:s.map((e=>{let{value:n,label:t,attributes:i}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:o===n?0:-1,"aria-selected":o===n,ref:e=>{l.push(e)},onKeyDown:h,onClick:d,...i,className:(0,a.A)("tabs__item",v.tabItem,i?.className,{"tabs__item--active":o===n}),children:t??n},n)}))})}function b(e){let{lazy:n,children:t,selectedValue:i}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===i));return e?(0,o.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==i})))})}function H(e){const n=g(e);return(0,j.jsxs)("div",{className:(0,a.A)("tabs-container",v.tabList),children:[(0,j.jsx)(f,{...n,...e}),(0,j.jsx)(b,{...n,...e})]})}function S(e){const n=(0,m.A)();return(0,j.jsx)(H,{...e,children:h(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var o=t(6540);const a={},i=o.createContext(a);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);
"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8250],{6363:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Assignments/javascript","title":"1. JavaScript","description":"Assignment Links","source":"@site/docs/Assignments/javascript.md","sourceDirName":"Assignments","slug":"/Assignments/javascript","permalink":"/docs/Assignments/javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/CS61D/website/tree/main/docs/Assignments/javascript.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"0. Git, Markdown, and Bash","permalink":"/docs/Assignments/git-md-bash"},"next":{"title":"2. Typescript","permalink":"/docs/Assignments/typescript"}}');var r=t(4848),i=t(8453);const a={sidebar_position:2},l="1. JavaScript",o={},c=[{value:"Assignment Links",id:"assignment-links",level:2},{value:"Assignment Overview",id:"assignment-overview",level:2},{value:"Setup",id:"setup",level:3},{value:"Running the tests",id:"running-the-tests",level:2},{value:"Run all tests in all testing files",id:"run-all-tests-in-all-testing-files",level:3},{value:"Run all tests for a single file/problem",id:"run-all-tests-for-a-single-fileproblem",level:3},{value:"Open up the Vitest UI",id:"open-up-the-vitest-ui",level:3},{value:"Problem 1: printIndex",id:"problem-1-printindex",level:2},{value:"Problem 2: largestMystery",id:"problem-2-largestmystery",level:2},{value:"Problem 3: multiplyBy",id:"problem-3-multiplyby",level:2},{value:"Problem 4: indexAndConcat",id:"problem-4-indexandconcat",level:2},{value:"Problem 5: Where&#39;s Waldo?",id:"problem-5-wheres-waldo",level:2},{value:"Problem 6: Are People Objects?",id:"problem-6-are-people-objects",level:2},{value:"Problem 7: We&#39;re all getting older",id:"problem-7-were-all-getting-older",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"1-javascript",children:"1. JavaScript"})}),"\n",(0,r.jsx)(n.h2,{id:"assignment-links",children:"Assignment Links"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"https://github.com/CS61D/Assignment-Starter-Javascript",rel:"nofollow",children:["Starter Code",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.img,{src:"/img/link-icons/github.svg",alt:"github",className:"github-icon",style:{width:"16px",height:"16px",marginLeft:"0.25rem",verticalAlign:"baseline"}})})]})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsxs)(n.a,{href:"https://www.youtube.com/watch?v=TrAyq1hSUpI",rel:"nofollow",children:["Lecture 1: JavaScript",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.img,{src:"/img/link-icons/youtube.svg",alt:"youtube",className:"glossary-icon",style:{width:"16px",height:"16px",marginLeft:"0.25rem",verticalAlign:"baseline"}})})]})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"assignment-overview",children:"Assignment Overview"}),"\n",(0,r.jsx)(n.p,{children:"The goal of this assignment is to get you familiar with JavaScript syntax, focussing on arrays, objects, and functions. None of the problems are designed to be overly difficult to complete conceptually. We also have several problems that can be completed using the map an filter methods, which will be extremely useful throughout the course. If you are struggling with map and filter, try solving the problem first using a for loop, and then convert your solution to using map and/or filter after."}),"\n",(0,r.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,r.jsxs)(n.p,{children:["Install the ",(0,r.jsxs)(n.a,{href:"../glossary#dependency",children:["dependencies",(0,r.jsx)(n.span,{className:"glossary-icon",children:" \ud83d\udcd6"})]})," to be able to run tests:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"bun install\n"})}),"\n",(0,r.jsx)(n.h2,{id:"running-the-tests",children:"Running the tests"}),"\n",(0,r.jsx)(n.p,{children:"All the tests that will be used for this assignment are located in the tests directory. We use a testing framework called vitest. A test for the first problem of this assignment looks like this."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'import { describe, it, expect } from "vitest";\n\n// Import the function written for the problem from the correct file\nimport printIndex from "../problems/Problem1";\n\ndescribe("printIndex Function", () => {\n  // Test Suite\n  it("Basic Case", () => {\n    // Individual Test Case\n    // Define sample inputs\n    const array = [10, 20, 30, 40, 50];\n    const index = 2;\n\n    // Get the result from the user created function\n    const result = printIndex(index, array);\n\n    // Define expected behavior\n    const expected = "Value at index 2 is 30";\n\n    // Check if expected behavior matches actual behavior\n    expect(result).toBe(expected);\n  });\n});\n'})}),"\n",(0,r.jsx)(n.p,{children:"Much like CS 61A or 61B, we run a series of tests on your solution code to verify it works properly. The tests that you have a local copy of are the exact same tests that we will use in the auto grader. If all of the tests pass locally, they should all pass on the auto grader and you will get full credit on the assignment. We also use the same testing framework for more or less the entire first half of the course, so take some time to play around with it and learn how it works now."}),"\n",(0,r.jsx)(n.p,{children:"Each problem has its own test suite, which is in its own file."}),"\n",(0,r.jsx)(n.h3,{id:"run-all-tests-in-all-testing-files",children:"Run all tests in all testing files"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"bun vitest\n"})}),"\n",(0,r.jsx)(n.p,{children:"The tests will rerun any time you make changes to a file. However, running all of the tests will bombard you with tons of failures for questions you have not even started working on yet."}),"\n",(0,r.jsx)(n.h3,{id:"run-all-tests-for-a-single-fileproblem",children:"Run all tests for a single file/problem"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'bun vitest run -t "TestName"\n'})}),"\n",(0,r.jsx)(n.p,{children:"You can pass the name of a specific test or test suite to run only those tests. You need to specify the exact name of the suite or test. If you are unsure of the name of a test for a given question, open the test file for the question. For instance, to run the test suites for the first question, run the snippet below."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'bun vitest run -t "printIndex Function"\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If you want to learn more about vitest cli commands check out the ",(0,r.jsxs)(n.a,{href:"https://vitest.dev/guide/cli.html",rel:"nofollow",children:["vitest docs",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{className:"glossary-icon",children:" \u2197"})})]})]}),"\n",(0,r.jsx)(n.h3,{id:"open-up-the-vitest-ui",children:"Open up the Vitest UI"}),"\n",(0,r.jsxs)(n.p,{children:["Vitest provides an ",(0,r.jsxs)(n.a,{href:"https://vitest.dev/guide/ui",rel:"nofollow",children:["interactive ui",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{className:"glossary-icon",children:" \u2197"})})]})," which can be used to run test suites, and view your test files. To run it:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"bun test:ui # To trigger the test UI in the browser\n"})}),"\n",(0,r.jsxs)(n.p,{children:["And then the ui will open in the browser at ",(0,r.jsxs)(n.a,{href:"http://localhost:51204/__vitest__/",rel:"nofollow",children:["http://localhost:51204/",(0,r.jsx)(n.strong,{children:"vitest"}),"/",(0,r.jsx)(n.span,{children:(0,r.jsx)(n.span,{className:"glossary-icon",children:" \u2197"})})]}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"problem-1-printindex",children:"Problem 1: printIndex"}),"\n",(0,r.jsx)(n.p,{children:'Create a function printIndex, which takes an index and an array as parameters. The function should return a string that says "Value at index (index value) is (value of array at given index)". You may assume that the given index will not be out of bounds for the given array.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const index = 2;\nconst array = [5, 10, 15, 20];\nprintIndex(index, array); // Returns "Value at index 2 is 15"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Create the function printIndex in the Problem1.js file. Once you have defined the function, uncomment the line at the bottom of the file exporting the function."}),"\n",(0,r.jsx)(n.h2,{id:"problem-2-largestmystery",children:"Problem 2: largestMystery"}),"\n",(0,r.jsx)(n.p,{children:'Given an array of numbers, arr, and an arbitrary one argument function, mysteryFunc which returns a either true or false, return the largest number in arr that causes mysteryFunc to return true. If no number causes the function to return true, return "No number passes the function!"'}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"mysteryFunc can be any function that returns a boolean. You will have to call mysteryFunc on every element or arr and you can't assume anything about how mysteryFunc works."})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const arr = [-5, -2, 0, 6, 10, 55, 71];\nconst divisibleByFive = (num) => num % 5 === 0; // Returns true if num is divisible by 5\nlargestMystery(arr, divisibleByFive); // Returns 55\n\nconst isNegative = (num) => num < 0; // Returns true if num is negative\nlargestMystery(arr, isNegative); // Returns -2\n"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-3-multiplyby",children:"Problem 3: multiplyBy"}),"\n",(0,r.jsx)(n.p,{children:"Given an array of numbers, return an array in which each number is multiplied by the multiplier input."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:"const arr = [-3, 4, 10, 5];\nconst multiplier = 2;\nmultiplyBy(arr, multiplier); // Returns [-6, 8, 20, 5]\nmultiplier = 10;\nmultiplyBy(arr, multiplier); // Returns [-30, 40, 100, 50]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-4-indexandconcat",children:"Problem 4: indexAndConcat"}),"\n",(0,r.jsx)(n.p,{children:"Given an array of strings, return a new array that has the index of the string concatenated with the string itself."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const arr = [\n  "Hello!",\n  "My name is Elder Price",\n  "And I would like to share with you",\n  "The most amazing book.",\n];\nindexAndConcat(arr);\n/**\n * Returns\n * ["0Hello!",\n * "1My name is Elder Price",\n * "2And I would like to share with you",\n * "3The most amazing book."]\n */\n'})}),"\n",(0,r.jsx)(n.h2,{id:"problem-5-wheres-waldo",children:"Problem 5: Where's Waldo?"}),"\n",(0,r.jsx)(n.p,{children:'Given an array of strings, return all an array of all of the strings containing the all lower case string "waldo". Be sure to ignore any instances of waldo besides the all lower case version. Additionally, we want to make sure that we can find waldo, so make all of the returned strings FULL UPPER CASE.'}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const arr = [\n  "Who is waldo?",\n  "where is he?",\n  "what is waldo doing?",\n  "WalDo is already here",\n];\nuppercaseStringsContainingWaldo(arr); // Returns ["WHO IS WALDO?", "WHAT IS WALDO DOING?"]\n'})}),"\n",(0,r.jsx)(n.h2,{id:"problem-6-are-people-objects",children:"Problem 6: Are People Objects?"}),"\n",(0,r.jsx)(n.p,{children:"Given an array of names, and an array of ages, return an array of objects with the properties name and age. You may assume that the names and ages arrays are of the same length"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const names = ["Taylor", "Jake"];\nconst ages = [20, 29];\nnamesAndAges(names, ages);\n// Returns the value assigned to expectedReturn\nconst expectedReturn = [\n  {\n    name: "Taylor",\n    age: 20,\n  },\n  {\n    name: "Jake",\n    age: 29,\n  },\n];\n'})}),"\n",(0,r.jsx)(n.h2,{id:"problem-7-were-all-getting-older",children:"Problem 7: We're all getting older"}),"\n",(0,r.jsx)(n.p,{children:"You are given an object obj in string form. Parse the object and determine if it has an age property. If it does, double it. If it doesn't add an age property and set it to zero. Return the parsed object."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",children:'const expected = {};\n\n// Note the inputs are strings\nconst agelessWonder = \'{"beauty":10,"followers":1000000,"name":"Ariana"}\';\nconst oldMan = \'{"beauty":0,"backPain":true,"age":50}\';\n\ndoubleAge(agelessWonder); // Returns the value assigned to expected\nexpected = {\n  beauty: 10,\n  followers: 1_000_000,\n  name: "Ariana",\n  age: 0,\n};\n\ndoubleAge(oldMan); // Returns the value assigned to expected\nexpected = {\n  beauty: 0,\n  backPain: true,\n  age: 100,\n};\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);